(define a!1_1::int) 
(define number_field_pred_2::(-> real bool)) 
(define real_pred_3::(-> real bool)) 
(define rational_pred_4::(-> real bool)) 
(define integer_pred_5::(-> real bool)) 
(define INT64_MIN_6::int) 
(define INT64_MAX_7::int) 
(define exp2_8::(-> real int)) 
(define even?_9::(-> real bool)) 
(define odd?_10::(-> real bool)) 
(define b!1_11::int) 
(assert (>  340282366920938463463374607431768211455 0)) 
(assert (>=  340282366920938463463374607431768211455 0)) 
(assert (integer_pred_5  340282366920938463463374607431768211455)) 
(assert (rational_pred_4  340282366920938463463374607431768211455)) 
(assert (real_pred_3  340282366920938463463374607431768211455)) 
(assert (number_field_pred_2  340282366920938463463374607431768211455)) 
(assert (>=  (*  a!1_1 b!1_11) 0)) 
(assert (integer_pred_5  (*  a!1_1 b!1_11))) 
(assert (rational_pred_4  (*  a!1_1 b!1_11))) 
(assert (real_pred_3  (*  a!1_1 b!1_11))) 
(assert (number_field_pred_2  (*  a!1_1 b!1_11))) 
(assert (>=  b!1_11 0)) 
(assert (<=  b!1_11 INT64_MAX_7)) 
(assert (<=  INT64_MIN_6 b!1_11)) 
(assert (integer_pred_5  b!1_11)) 
(assert (rational_pred_4  b!1_11)) 
(assert (real_pred_3  b!1_11)) 
(assert (number_field_pred_2  b!1_11)) 
(assert (odd?_10  9223372036854775807)) 
(assert (>  9223372036854775807 0)) 
(assert (<=  9223372036854775807 (-  (exp2_8  64) 1))) 
(assert (integer_pred_5  (-  (exp2_8  64) 1))) 
(assert (rational_pred_4  (-  (exp2_8  64) 1))) 
(assert (real_pred_3  (-  (exp2_8  64) 1))) 
(assert (number_field_pred_2  (-  (exp2_8  64) 1))) 
(assert (odd?_10  1)) 
(assert (>  1 0)) 
(assert (<  1 (exp2_8  8))) 
(assert (>=  1 0)) 
(assert (integer_pred_5  1)) 
(assert (rational_pred_4  1)) 
(assert (real_pred_3  1)) 
(assert (number_field_pred_2  1)) 
(assert (>  (exp2_8  64) 64)) 
(assert (integer_pred_5  (exp2_8  64))) 
(assert (rational_pred_4  (exp2_8  64))) 
(assert (real_pred_3  (exp2_8  64))) 
(assert (number_field_pred_2  (exp2_8  64))) 
(assert (even?_9  64)) 
(assert (>  64 0)) 
(assert (<  64 (exp2_8  8))) 
(assert (>=  64 0)) 
(assert (integer_pred_5  64)) 
(assert (rational_pred_4  64)) 
(assert (real_pred_3  64)) 
(assert (number_field_pred_2  64)) 
(assert (>=  9223372036854775807 0)) 
(assert (integer_pred_5  9223372036854775807)) 
(assert (rational_pred_4  9223372036854775807)) 
(assert (real_pred_3  9223372036854775807)) 
(assert (number_field_pred_2  9223372036854775807)) 
(assert (>=  a!1_1 0)) 
(assert (even?_9  0)) 
(assert (<  0 (exp2_8  8))) 
(assert (>  (exp2_8  8) 8)) 
(assert (integer_pred_5  (exp2_8  8))) 
(assert (rational_pred_4  (exp2_8  8))) 
(assert (real_pred_3  (exp2_8  8))) 
(assert (number_field_pred_2  (exp2_8  8))) 
(assert (even?_9  8)) 
(assert (>  8 0)) 
(assert (<  8 (exp2_8  8))) 
(assert (>  (exp2_8  8) 8)) 
(assert (integer_pred_5  (exp2_8  8))) 
(assert (rational_pred_4  (exp2_8  8))) 
(assert (real_pred_3  (exp2_8  8))) 
(assert (number_field_pred_2  (exp2_8  8))) 
(assert (>=  8 0)) 
(assert (integer_pred_5  8)) 
(assert (rational_pred_4  8)) 
(assert (real_pred_3  8)) 
(assert (number_field_pred_2  8)) 
(assert (>=  0 0)) 
(assert (integer_pred_5  0)) 
(assert (rational_pred_4  0)) 
(assert (real_pred_3  0)) 
(assert (number_field_pred_2  0)) 
(assert (<=  a!1_1 INT64_MAX_7)) 
(assert (integer_pred_5  INT64_MAX_7)) 
(assert (rational_pred_4  INT64_MAX_7)) 
(assert (real_pred_3  INT64_MAX_7)) 
(assert (number_field_pred_2  INT64_MAX_7)) 
(assert (<=  INT64_MIN_6 a!1_1)) 
(assert (integer_pred_5  INT64_MIN_6)) 
(assert (rational_pred_4  INT64_MIN_6)) 
(assert (real_pred_3  INT64_MIN_6)) 
(assert (number_field_pred_2  INT64_MIN_6)) 
(assert (integer_pred_5  a!1_1)) 
(assert (rational_pred_4  a!1_1)) 
(assert (real_pred_3  a!1_1)) 
(assert (number_field_pred_2  a!1_1)) 
(assert (<=  a!1_1 9223372036854775807)) 
(assert (>=  a!1_1 0)) 
(assert (<=  b!1_11 9223372036854775807)) 
(assert (>=  b!1_11 0)) 
(assert (not (<=  (*  a!1_1 b!1_11) 340282366920938463463374607431768211455))) 
(check)
(show-model)

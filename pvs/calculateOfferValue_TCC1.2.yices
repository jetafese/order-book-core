(define n_1::int) 
(define number_field_pred_2::(-> real bool)) 
(define real_pred_3::(-> real bool)) 
(define rational_pred_4::(-> real bool)) 
(define integer_pred_5::(-> real bool)) 
(define exp2_6::(-> real int)) 
(define even?_7::(-> real bool)) 
(define odd?_8::(-> real bool)) 
(define d_9::int) 
(define maxSend_10::int) 
(define maxReceive_11::int) 
(assert (>  340282366920938463463374607431768211455 0)) 
(assert (>=  340282366920938463463374607431768211455 0)) 
(assert (integer_pred_5  340282366920938463463374607431768211455)) 
(assert (rational_pred_4  340282366920938463463374607431768211455)) 
(assert (real_pred_3  340282366920938463463374607431768211455)) 
(assert (number_field_pred_2  340282366920938463463374607431768211455)) 
(assert (>=  (*  maxSend_10 n_1) 0)) 
(assert (integer_pred_5  (*  maxSend_10 n_1))) 
(assert (rational_pred_4  (*  maxSend_10 n_1))) 
(assert (real_pred_3  (*  maxSend_10 n_1))) 
(assert (number_field_pred_2  (*  maxSend_10 n_1))) 
(assert (>=  (*  maxReceive_11 d_9) 0)) 
(assert (integer_pred_5  (*  maxReceive_11 d_9))) 
(assert (rational_pred_4  (*  maxReceive_11 d_9))) 
(assert (real_pred_3  (*  maxReceive_11 d_9))) 
(assert (number_field_pred_2  (*  maxReceive_11 d_9))) 
(assert (>=  maxReceive_11 0)) 
(assert (<=  maxReceive_11 (-  (exp2_6  64) 1))) 
(assert (integer_pred_5  maxReceive_11)) 
(assert (rational_pred_4  maxReceive_11)) 
(assert (real_pred_3  maxReceive_11)) 
(assert (number_field_pred_2  maxReceive_11)) 
(assert (>  18446744073709551615 0)) 
(assert (>=  18446744073709551615 0)) 
(assert (integer_pred_5  18446744073709551615)) 
(assert (rational_pred_4  18446744073709551615)) 
(assert (real_pred_3  18446744073709551615)) 
(assert (number_field_pred_2  18446744073709551615)) 
(assert (>=  maxSend_10 0)) 
(assert (<=  maxSend_10 (-  (exp2_6  64) 1))) 
(assert (integer_pred_5  maxSend_10)) 
(assert (rational_pred_4  maxSend_10)) 
(assert (real_pred_3  maxSend_10)) 
(assert (number_field_pred_2  maxSend_10)) 
(assert (>=  d_9 0)) 
(assert (<=  d_9 (-  (exp2_6  32) 1))) 
(assert (integer_pred_5  d_9)) 
(assert (rational_pred_4  d_9)) 
(assert (real_pred_3  d_9)) 
(assert (number_field_pred_2  d_9)) 
(assert (odd?_8  4294967295)) 
(assert (>  4294967295 0)) 
(assert (<=  4294967295 (-  (exp2_6  64) 1))) 
(assert (integer_pred_5  (-  (exp2_6  64) 1))) 
(assert (rational_pred_4  (-  (exp2_6  64) 1))) 
(assert (real_pred_3  (-  (exp2_6  64) 1))) 
(assert (number_field_pred_2  (-  (exp2_6  64) 1))) 
(assert (>  (exp2_6  64) 64)) 
(assert (integer_pred_5  (exp2_6  64))) 
(assert (rational_pred_4  (exp2_6  64))) 
(assert (real_pred_3  (exp2_6  64))) 
(assert (number_field_pred_2  (exp2_6  64))) 
(assert (even?_7  64)) 
(assert (>  64 0)) 
(assert (<  64 (exp2_6  8))) 
(assert (>=  64 0)) 
(assert (integer_pred_5  64)) 
(assert (rational_pred_4  64)) 
(assert (real_pred_3  64)) 
(assert (number_field_pred_2  64)) 
(assert (>=  4294967295 0)) 
(assert (integer_pred_5  4294967295)) 
(assert (rational_pred_4  4294967295)) 
(assert (real_pred_3  4294967295)) 
(assert (number_field_pred_2  4294967295)) 
(assert (>=  n_1 0)) 
(assert (<=  n_1 (-  (exp2_6  32) 1))) 
(assert (integer_pred_5  (-  (exp2_6  32) 1))) 
(assert (rational_pred_4  (-  (exp2_6  32) 1))) 
(assert (real_pred_3  (-  (exp2_6  32) 1))) 
(assert (number_field_pred_2  (-  (exp2_6  32) 1))) 
(assert (odd?_8  1)) 
(assert (>  1 0)) 
(assert (<  1 (exp2_6  8))) 
(assert (>=  1 0)) 
(assert (integer_pred_5  1)) 
(assert (rational_pred_4  1)) 
(assert (real_pred_3  1)) 
(assert (number_field_pred_2  1)) 
(assert (>  (exp2_6  32) 32)) 
(assert (integer_pred_5  (exp2_6  32))) 
(assert (rational_pred_4  (exp2_6  32))) 
(assert (real_pred_3  (exp2_6  32))) 
(assert (number_field_pred_2  (exp2_6  32))) 
(assert (even?_7  32)) 
(assert (>  32 0)) 
(assert (<  32 (exp2_6  8))) 
(assert (>=  32 0)) 
(assert (even?_7  0)) 
(assert (<  0 (exp2_6  8))) 
(assert (>  (exp2_6  8) 8)) 
(assert (integer_pred_5  (exp2_6  8))) 
(assert (rational_pred_4  (exp2_6  8))) 
(assert (real_pred_3  (exp2_6  8))) 
(assert (number_field_pred_2  (exp2_6  8))) 
(assert (even?_7  8)) 
(assert (>  8 0)) 
(assert (<  8 (exp2_6  8))) 
(assert (>  (exp2_6  8) 8)) 
(assert (integer_pred_5  (exp2_6  8))) 
(assert (rational_pred_4  (exp2_6  8))) 
(assert (real_pred_3  (exp2_6  8))) 
(assert (number_field_pred_2  (exp2_6  8))) 
(assert (>=  8 0)) 
(assert (integer_pred_5  8)) 
(assert (rational_pred_4  8)) 
(assert (real_pred_3  8)) 
(assert (number_field_pred_2  8)) 
(assert (>=  0 0)) 
(assert (integer_pred_5  0)) 
(assert (rational_pred_4  0)) 
(assert (real_pred_3  0)) 
(assert (number_field_pred_2  0)) 
(assert (integer_pred_5  32)) 
(assert (rational_pred_4  32)) 
(assert (real_pred_3  32)) 
(assert (number_field_pred_2  32)) 
(assert (integer_pred_5  n_1)) 
(assert (rational_pred_4  n_1)) 
(assert (real_pred_3  n_1)) 
(assert (number_field_pred_2  n_1)) 
(assert (<=  n_1 4294967295)) 
(assert (>=  n_1 0)) 
(assert (<=  d_9 4294967295)) 
(assert (>=  d_9 0)) 
(assert (<=  maxSend_10 18446744073709551615)) 
(assert (>=  maxSend_10 0)) 
(assert (<=  maxReceive_11 18446744073709551615)) 
(assert (>=  maxReceive_11 0)) 
(assert (not (<  (*  maxReceive_11 d_9) (*  maxSend_10 n_1)))) 
(assert (not (<=  (*  maxSend_10 n_1) 340282366920938463463374607431768211455))) 
(check)
(show-model)
